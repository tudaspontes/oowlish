{"ast":null,"code":"var _jsxFileName = \"/Users/Felipe/Projetos/oowlish-test/oowlish-time-management/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { GlobalStyle } from \"./styles/global\";\nimport { Header } from './components/Header';\nimport { Dashboard } from \"./components/Dashboard\";\nimport { EntryTimeModal } from \"./components/Modal/EntryTimeModal\";\nimport Modal from 'react-modal';\nimport { LaunchBreakModal } from \"./components/Modal/LaunchBreakModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nexport function App() {\n  _s();\n\n  const [isNewInputTimeModalOpen, setIsNewInputTimeModalOpen] = useState(false);\n\n  function handleOpenNewInputTimeModal() {\n    setIsNewInputTimeModalOpen(true);\n  }\n\n  function handleCloseNewInputTimeModal() {\n    setIsNewInputTimeModalOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onOpenNewTimeInputModal: handleOpenNewInputTimeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EntryTimeModal, {\n      isOpen: isNewInputTimeModalOpen,\n      onRequestClose: handleCloseNewInputTimeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LaunchBreakModal, {\n      isOpen: isNewInputTimeModalOpen,\n      onRequestClose: handleCloseNewInputTimeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"czydBQXJakyQhOFgT0I3qaaAYBs=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Felipe/Projetos/oowlish-test/oowlish-time-management/src/App.tsx"],"names":["useState","GlobalStyle","Header","Dashboard","EntryTimeModal","Modal","LaunchBreakModal","setAppElement","App","isNewInputTimeModalOpen","setIsNewInputTimeModalOpen","handleOpenNewInputTimeModal","handleCloseNewInputTimeModal"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,gBAAT,QAAiC,qCAAjC;;;AAEAD,KAAK,CAACE,aAAN,CAAoB,OAApB;AAEA,OAAO,SAASC,GAAT,GAAe;AAAA;;AACpB,QAAM,CAACC,uBAAD,EAA0BC,0BAA1B,IAAwDV,QAAQ,CAAC,KAAD,CAAtE;;AAEA,WAASW,2BAAT,GAAuC;AACrCD,IAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACD;;AAED,WAASE,4BAAT,GAAwC;AACtCF,IAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,uBAAuB,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,cAAD;AACE,MAAA,MAAM,EAAEF,uBADV;AAEE,MAAA,cAAc,EAAEG;AAFlB;AAAA;AAAA;AAAA;AAAA,YAJF,eAQE,QAAC,gBAAD;AACE,MAAA,MAAM,EAAEH,uBADV;AAEE,MAAA,cAAc,EAAEG;AAFlB;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAeD;;GAzBeJ,G;;KAAAA,G","sourcesContent":["import { useState } from \"react\";\nimport { GlobalStyle } from \"./styles/global\";\nimport { Header } from './components/Header'\nimport { Dashboard } from \"./components/Dashboard\";\nimport { EntryTimeModal } from \"./components/Modal/EntryTimeModal\";\nimport Modal from 'react-modal'\nimport { LaunchBreakModal } from \"./components/Modal/LaunchBreakModal\";\n\nModal.setAppElement('#root')\n\nexport function App() {\n  const [isNewInputTimeModalOpen, setIsNewInputTimeModalOpen] = useState(false);\n\n  function handleOpenNewInputTimeModal() {\n    setIsNewInputTimeModalOpen(true);\n  }\n\n  function handleCloseNewInputTimeModal() {\n    setIsNewInputTimeModalOpen(false);\n  }\n  return (\n    <>\n      <Header onOpenNewTimeInputModal={handleOpenNewInputTimeModal}/>\n      <Dashboard />\n      <GlobalStyle />\n      <EntryTimeModal\n        isOpen={isNewInputTimeModalOpen}\n        onRequestClose={handleCloseNewInputTimeModal}\n      />\n      <LaunchBreakModal \n        isOpen={isNewInputTimeModalOpen}\n        onRequestClose={handleCloseNewInputTimeModal}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}